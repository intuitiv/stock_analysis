[pytest]
# Test discovery and execution settings
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    slow: Tests that take longer to run
    memory: Tests related to memory management
    learning: Tests related to learning engine
    reasoning: Tests related to reasoning engine
    opinion: Tests related to opinion engine
    llm: Tests related to LLM processor
    brain: Tests related to CHAETRA brain
    parallel: Tests that can run in parallel

# Asyncio settings
asyncio_mode = auto

# Performance and timeout settings
timeout = 300
timeout_method = thread

# Logging settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
addopts = 
    --strict-markers
    --verbosity=2
    --showlocals
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-branch
    --no-cov-on-fail

# Environment settings
env =
    TEST_MODE=true
    PYTHONPATH=.
    PYTHONUNBUFFERED=1

# Coverage configuration
[coverage:run]
branch = True
source = app
omit =
    tests/*
    */__init__.py
    */migrations/*
    */config/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    raise ValueError
    except Exception as e:

# Ignore warnings from third-party libraries
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Test database settings
[test:database]
url = postgresql+asyncpg://postgres:postgres@localhost:5432/test_naetra_db
echo = false
pool_size = 5
max_overflow = 10

# Test cache settings
[test:cache]
url = redis://localhost:6379/1
ttl = 3600

# Test services settings
[test:services]
ollama_url = http://localhost:11434
mock_server_url = http://localhost:1080

# Performance test thresholds
[test:performance]
response_time_threshold_ms = 1000
memory_threshold_mb = 512
concurrent_requests = 10
request_batches = 5
warmup_requests = 3

# Parallel testing settings
[pytest:xdist]
numprocesses = auto

# Benchmark settings
[benchmark]
min_rounds = 5
max_time = 1.0
timer = time.perf_counter
disable_gc = True
warmup = True

# HTML report settings
[html]
directory = test_results/html
title = CHAETRA Test Results
